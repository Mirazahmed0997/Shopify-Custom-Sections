{% comment %}
  Floating Navbar Section (Responsive + Hamburger Menu)
{% endcomment %}

<section class="floating-navbar">
    
          <div class="nav-container">
    
    <!-- Logo -->
    <a href="/" class="nav-logo">
      {% if section.settings.logo_icon != blank %}
        <span class="nav-logo-icon">{{ section.settings.logo_icon }}</span>
      {% endif %}
      <span class="nav-logo-text">{{ section.settings.logo_text }}</span>
    </a>

    <!-- Desktop Menu -->
    <nav class="nav-links desktop-nav">
      {% for block in section.blocks %}
<a href="{{ block.settings.link }}" class="nav-link{% if block.settings.active %} active{% endif %}">
          {% if block.settings.icon != blank %}
            <span class="nav-link-icon">{{ block.settings.icon }}</span>
          {% endif %}
          {{ block.settings.text }}
        </a>
      {% endfor %}
    </nav>

    <!-- Icons + Hamburger -->
    <div class="nav-right">
    <!-- Search Icon -->
  <!-- Search Icon -->
{% if section.settings.show_search %}
  <button class="nav-icon search-icon" aria-label="Search">
    üîç
  </button>
{% endif %}


      {% if section.settings.show_cart %}
        <a href="/cart" class="nav-icon">üõí</a>
      {% endif %}

      <!-- Hamburger Button -->
      <button class="hamburger" id="navToggle" aria-label="Menu">
        ‚ò∞
      </button>
    </div>
  </div>
  

  <!-- Mobile Dropdown Menu -->
  <div class="mobile-nav" id="mobileNav">
    {% for block in section.blocks %}
      <a href="{{ block.settings.link }}" class="mobile-link{% if block.settings.active %} active{% endif %}">
        {% if block.settings.icon != blank %}
          <span class="nav-link-icon">{{ block.settings.icon }}</span>
        {% endif %}
        {{ block.settings.text }}
      </a>
    {% endfor %}
  </div>
</section>

<style>

.search-container {
  position: absolute;
  top: 100%; /* Position it directly below the search icon */
  left: 50%;
  transform: translateX(-50%); /* Center the search field horizontally */
  width: 100%; /* Adjust the width of the search field */
  margin-top: 10px; /* Space between the icon and the field */
  display: none; /* Initially hidden */
  padding: 5px;
  border-radius: 8px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
}

.search-form {
  width: 100%;
  display: flex;
  gap: 10px;
}

.search-field {
  width: 100%;
  padding: 15px;
  font-size: 14px;
  border-radius: 20px;
 
}

.search-field:focus {
  border-color: #4ade80; /* Focused state color */
}

.search-btn {
  padding: 8px 12px;
  background-color: #151A26;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  color: white;
  font-size: 14px;
}

{% comment %} .search-btn:hover {
  background-color: #22c55e;
} {% endcomment %}

.search-icon {
  cursor: pointer;
}






/* Navbar Container */

.floating-navbar {
  position: fixed;   /* stick to top */
  top: 10px;
  left: 50%;          /* center horizontally */
  transform: translateX(-50%);
  z-index: 9999;
  background: #151A26;
  border-radius: 50px;
  max-width: 1200px;
  width: 90%;          /* responsive width */
  padding: 10px 20px;
  display: flex;
  flex-direction: column;
  animation: floatNavbar 4s ease-in-out infinite;
  box-shadow: 0 4px 20px rgba(0,0,0,0.5);
}

/* Floating Animation */
@keyframes floatNavbar {
  0%, 100% { transform: translate(-50%, 0); }
  50% { transform: translate(-50%, -4px); }
}

.nav-container {
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
}

.nav-logo {
  display: flex;
  align-items: center;
  font-size: 1.3rem;
  font-weight: bold;
  color: #4ade80;
  text-decoration: none;
}

.nav-links {
  display: flex;
  gap: 20px;
}

.nav-link {
  color: white;
  font-weight: 500;
  text-decoration: none;
  padding: 6px 12px;
  border-radius: 8px;
  transition: background 0.3s ease, color 0.3s ease;
}
.nav-link:hover { background: rgba(255,255,255,0.1); }
.nav-link.active { background: #22c55e; color: white; }

.nav-right {
  display: flex;
  align-items: center;
  gap: 15px;
}

.nav-icon {
  font-size: 2.2rem;
  text-decoration: none;
  transition: transform 0.3s ease;
}
.nav-icon:hover { transform: scale(1.2); }

/* Hamburger */
.hamburger {
  display: none;
  font-size: 1.6rem;
  color: white;
  background: none;
  border: none;
  cursor: pointer;
}

/* Mobile Nav */
.mobile-nav {
  display: none;
  flex-direction: column;
  background: #0b1221;
  border-radius: 0 0 20px 20px;
  padding: 10px 0;
  margin-top: 10px;
}
.mobile-link {
  color: white;
  text-decoration: none;
  padding: 10px 20px;
  display: block;
  transition: background 0.3s ease;
}
.mobile-link:hover { background: rgba(255,255,255,0.1); }
.mobile-link.active { background: #22c55e; color: white; }

/* Responsive */

/* Tablets & Mobile */
@media (max-width: 1200px) {
  .floating-navbar { max-width: 90%; padding: 10px 16px; }
}

/* Mobile devices <= 768px */
@media (max-width: 768px) {
  .floating-navbar { 
    max-width: 95%; 
    padding: 8px 12px; 
    border-radius: 30px; 
    margin-left: -68px;
  }
  .desktop-nav { display: none !important; }
  .hamburger { display: block !important; }
  .nav-right { gap: 10px; }
  .mobile-nav { width: 100%; padding: 8px 0; }
  .mobile-link { padding: 8px 15px; }
  .nav-logo { font-size: 3rem; }
}

/* Small phones <= 480px */
@media (max-width: 480px) {
  .floating-navbar { 
    max-width: 95%; 
    padding: 6px 10px; 
    padding-top: 20px; 
    padding-bottom: 20px; 
    border-radius: 20px; 
  }
  .nav-logo { font-size: 2.2rem; }
  .nav-icon { font-size: 2.2rem; }
  .hamburger { font-size: 2.2rem; }
}

/* Large screens > 1400px */
@media (min-width: 1401px) {
  .floating-navbar { max-width: 1200px; }
}
</style>


<script>
document.addEventListener('DOMContentLoaded', function () {
  const navToggle = document.getElementById('navToggle');
  const mobileNav = document.getElementById('mobileNav');

  navToggle.addEventListener('click', () => {
    mobileNav.style.display = (mobileNav.style.display === 'flex') ? 'none' : 'flex';
  });
});






document.addEventListener('DOMContentLoaded', function () {
  const navToggle = document.getElementById('navToggle');
  const mobileNav = document.getElementById('mobileNav');
  const searchIcon = document.querySelector('.search-icon');
  
  // Create a search container dynamically and initially hide it
  const searchContainer = document.createElement('div');
  searchContainer.classList.add('search-container'); // Add a class to style it
  
  // Create the search form
  const searchForm = document.createElement('form');
  searchForm.setAttribute('action', '/search');
  searchForm.setAttribute('method', 'get');
  searchForm.classList.add('search-form');
  
  // Create the search input field
  const searchField = document.createElement('input');
  searchField.setAttribute('type', 'text');
  searchField.setAttribute('name', 'q'); // Shopify search query parameter
  searchField.setAttribute('placeholder', 'Search...');
  searchField.classList.add('search-field');
  
  // Append the input field to the search form
  searchForm.appendChild(searchField);
  
  // Create a submit button for the form
  const searchButton = document.createElement('button');
  searchButton.setAttribute('type', 'submit');
  searchButton.classList.add('search-btn');
  searchButton.innerHTML = 'Search';
  
  // Append the button to the search form
  searchForm.appendChild(searchButton);
  
  // Append the search form to the search container
  searchContainer.appendChild(searchForm);

  // Append the search container below the search icon (in the nav)
  document.querySelector('.nav-container').appendChild(searchContainer);

  // Toggle mobile menu visibility
  navToggle.addEventListener('click', () => {
    mobileNav.style.display = (mobileNav.style.display === 'flex') ? 'none' : 'flex';
  });

  // Handle search icon click
  searchIcon.addEventListener('click', function (event) {
    event.preventDefault(); // Prevent page redirection
    searchContainer.style.display = (searchContainer.style.display === 'none' || !searchContainer.style.display) ? 'block' : 'none';
    searchField.focus();  // Focus on the input field when search is shown
  });

  // Prevent form submission and keep the search input
  searchForm.addEventListener('submit', function (event) {
    event.preventDefault(); // Prevent page reload (form reset)
    
    // Perform search using JavaScript (with URL change)
    const searchQuery = searchField.value;
    if (searchQuery) {
      // Redirect to the Shopify search page
      window.location.href = '/search?q=' + encodeURIComponent(searchQuery);
    }
  });
});







</script>

{% schema %}
{
  "name": "Custom Floating Navbar",
  "settings": [
    {
      "type": "text",
      "id": "logo_icon",
      "label": "Logo Icon",
      "default": "üíé"
    },
    {
      "type": "text",
      "id": "logo_text",
      "label": "Logo Text",
      "default": "Oracle's Shop"
    },
    {
      "type": "checkbox",
      "id": "show_search",
      "label": "Show Search Icon",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_cart",
      "label": "Show Cart Icon",
      "default": true
    }
  ],
  "blocks": [
    {
      "type": "link",
      "name": "Menu Link",
      "settings": [
        {
          "type": "text",
          "id": "icon",
          "label": "Icon (emoji or HTML)"
        },
        {
          "type": "text",
          "id": "text",
          "label": "Link Text",
          "default": "Menu Item"
        },
       {
  "type": "url",
  "id": "link",
  "label": "Link URL"
}
,
        {
          "type": "checkbox",
          "id": "active",
          "label": "Highlight as Active",
          "default": false
        }
      ]
    }
  ],
  "max_blocks": 6,
  "presets": [
    {
      "name": "Floating Navbar",
      "blocks": [
        {
          "type": "link",
          "settings": {
            "icon": "üíé",
            "text": "Portal Home",
            "link": "/",
            "active": true
          }
        },
        {
          "type": "link",
          "settings": {
            "icon": "üåô",
            "text": "Dreamcatchers",
            "link": "/collections/dreamcatchers"
          }
        },
        {
          "type": "link",
          "settings": {
            "icon": "‚ú®",
            "text": "Spell Books",
            "link": "/collections/spell-books"
          }
        },
        {
          "type": "link",
          "settings": {
            "icon": "üíé",
            "text": "Gem Orbs",
            "link": "/collections/gem-orbs"
          }
        },
        {
          "type": "link",
          "settings": {
            "icon": "‚ú®",
            "text": "Mystical Candles",
            "link": "/collections/mystical-candles"
          }
        }
      ]
    }
  ]
}
{% endschema %}
